{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","requiredValidator","value","maxLenghtCreator","maxLenght","length","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","input","restProps","Input","createField","placeholder","name","component","validate","text","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","Dialog","path","id","s","dialog_wrapper","Message","message","maxLenght50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","text_items","Field","Dialogs","DialogItem","dialogData","map","dialog","MessageItems","messageData","values","addMessage","newMessageBody","compose"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,iCCD3H,oEAAO,IAAMC,EAAoB,SAACC,GAC9B,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,+LCFrCE,EAAc,SAAC,GAAyC,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SACrCC,EAAWH,GAAWC,EAC5B,OAAO,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KACzE,6BACKC,GAEL,6BACKC,GAAY,8BAAOF,MAKnBM,EAAW,SAACC,GAAW,IACxBC,EAA8BD,EAA9BC,MAAgBC,GAAcF,EAAvBT,KADgB,YACOS,EADP,mBAE/B,OAAO,kBAACV,EAAgBU,EAAQ,8CAAcC,EAAWC,MAGhDC,EAAQ,SAACH,GAAW,IACrBC,EAA8BD,EAA9BC,MAAgBC,GAAcF,EAAvBT,KADa,YACUS,EADV,mBAE5B,OAAO,kBAACV,EAAgBU,EAAO,2CAAWC,EAAWC,MAG5CE,EAAc,SAACC,EAAaC,EAAMC,EAAWC,GAAqC,IAA3BR,EAA0B,uDAAlB,GAAIS,EAAc,uDAAP,GACnF,OAAO,6BACH,kBAAC,IAAD,eAAOJ,YAAaA,EAAaC,KAAMA,EAAMC,UAAWA,EACpDC,SAAUA,GAAcR,IAAUS,K,uICzB1CC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKjB,MAAMY,OACT,kBAACG,EAAcE,KAAKjB,OADI,kBAAC,IAAD,CAAUkB,GAAG,eAHT,GACXC,IAAMJ,WAStC,OAFqCK,YAAQV,EAARU,CAAoCJ,K,oBCf7EjC,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,OAAS,wBAAwB,WAAa,8B,oBCAjHD,EAAOC,QAAU,CAAC,eAAiB,iC,oHCYpBqC,EATA,SAACrB,GACf,IAAIsB,EAAO,YAActB,EAAMuB,GAC/B,OACC,yBAAK3B,UAAW4B,IAAEC,gBACjB,kBAAC,IAAD,CAASP,GAAII,GAAOtB,EAAMM,Q,kBCGdoB,G,OARC,SAAC1B,GAChB,OACC,6BACC,2BAAIA,EAAM2B,Y,oCCAPC,EAAczC,YAAiB,IAiBxB0C,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAfZ,SAAC9B,GACvB,OACC,0BAAMgC,SAAUhC,EAAMiC,cACrB,yBAAKrC,UAAW4B,IAAEU,YACjB,6BACC,kBAACC,EAAA,EAAD,CAAO5B,UAAWR,IAAUO,KAAK,iBAAiBE,SAAU,CAACvB,IAAmB2C,MAEjF,6BACC,gGCeUQ,EAzBC,SAACpC,GAChB,IAAIqC,EAAarC,EAAMsC,WAAWA,WAChCC,KAAI,SAAAC,GAAM,OAAI,kBAAC,EAAD,CAAQlC,KAAMkC,EAAOlC,KAAMiB,GAAIiB,EAAOjB,QAElDkB,EAAezC,EAAMsC,WAAWI,YAClCH,KAAI,SAAAZ,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,aAO3C,OACC,yBAAK/B,UAAW4B,IAAEC,gBACjB,yBAAK7B,UAAW4B,IAAEgB,QAChBH,GAEF,6BACEI,EACD,kBAACZ,EAAD,CAAqBG,SAZJ,SAACW,GAEpB3C,EAAM4C,WAAWD,EAAOE,sB,wBCHXC,sBACd1B,aAPqB,SAACT,GACtB,MAAO,CACN2B,WAAY3B,EAAM6B,UAKM,CAAEI,iBADbE,CAGbV","file":"static/js/5.0161b090.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1chp0\",\"error\":\"FormsControls_error__1Srxy\",\"formSummaryError\":\"FormsControls_formSummaryError__2zsbT\"};","export const requiredValidator = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLenghtCreator = (maxLenght) => (value) => {\r\n    if (value && value.length > maxLenght) return `Max lenght is ${maxLenght} symbols`;\r\n    return undefined;\r\n};","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({ meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n        <div>\r\n            {children}\r\n        </div>\r\n        <div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, ...restProps } = props;\r\n    return <FormControl {...props} ><textarea {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, component, validate, props = {}, text = '') => {\r\n    return <div>\r\n        <Field placeholder={placeholder} name={name} component={component}\r\n            validate={validate} {...props} />{text}\r\n    </div>\r\n};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        };\r\n    };\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_wrapper\":\"Dialogs_dialog_wrapper__KVLFj\",\"dialog\":\"Dialogs_dialog__1I4me\",\"text_items\":\"Dialogs_text_items__Vq2Cb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_wrapper\":\"Dialog_dialog_wrapper__2aGci\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Dialog.module.css'\r\n\r\nconst Dialog = (props) => {\r\n\tlet path = '/dialogs/' + props.id;\r\n\treturn(\r\n\t\t<div className={s.dialog_wrapper}>\r\n\t\t\t<NavLink to={path}>{props.name}</NavLink>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport s from './Messages.module.css';\r\n\r\nconst Message = (props) => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<p>{props.message}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { requiredValidator, maxLenghtCreator } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\n\r\nconst maxLenght50 = maxLenghtCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div className={s.text_items}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Field component={Textarea} name='newMessageBody' validate={[requiredValidator, maxLenght50]} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button>Надіслати</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport const AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);","import React from 'react';\r\nimport Dialog from './Dialog/Dialog';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Messages/Messages';\r\nimport { AddMessageFormRedux } from './AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n\tlet DialogItem = props.dialogData.dialogData\r\n\t\t.map(dialog => <Dialog name={dialog.name} id={dialog.id} />);\r\n\r\n\tlet MessageItems = props.dialogData.messageData\r\n\t\t.map(message => <Message message={message.message} />);\r\n\r\n\tlet addNewMessage = (values) => {\r\n\t\t\r\n\t\tprops.addMessage(values.newMessageBody)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={s.dialog_wrapper}>\r\n\t\t\t<div className={s.dialog}>\r\n\t\t\t\t{DialogItem}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{MessageItems}\r\n\t\t\t\t<AddMessageFormRedux onSubmit={addNewMessage} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Dialogs;","import { addMessage } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogData: state.dialog\r\n\t};\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, { addMessage })\r\n\t//withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}