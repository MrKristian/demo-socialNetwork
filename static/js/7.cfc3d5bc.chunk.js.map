{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Login/Login.jsx","components/Login/LoginContainer.jsx"],"names":["module","exports","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","input","restProps","Input","createField","placeholder","name","component","validate","text","requiredValidator","value","maxLenghtCreator","maxLenght","length","maxLenght30","LoginFormRedux","reduxForm","form","handleSubmit","captchaUrl","onSubmit","type","src","s","formSummaryError","Login","getAuthLoginData","isAuth","to","formData","login","password","rememberMe","captcha","LoginContainer","this","redirect","React","Component","compose","connect","state","auth"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,+LCGrHC,EAAc,SAAC,GAAyC,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SACrCC,EAAWH,GAAWC,EAC5B,OAAO,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KACzE,6BACKC,GAEL,6BACKC,GAAY,8BAAOF,MAKnBM,EAAW,SAACC,GAAW,IACxBC,EAA8BD,EAA9BC,MAAgBC,GAAcF,EAAvBT,KADgB,YACOS,EADP,mBAE/B,OAAO,kBAACV,EAAgBU,EAAQ,8CAAcC,EAAWC,MAGhDC,EAAQ,SAACH,GAAW,IACrBC,EAA8BD,EAA9BC,MAAgBC,GAAcF,EAAvBT,KADa,YACUS,EADV,mBAE5B,OAAO,kBAACV,EAAgBU,EAAO,2CAAWC,EAAWC,MAG5CE,EAAc,SAACC,EAAaC,EAAMC,EAAWC,GAAqC,IAA3BR,EAA0B,uDAAlB,GAAIS,EAAc,uDAAP,GACnF,OAAO,6BACH,kBAAC,IAAD,eAAOJ,YAAaA,EAAaC,KAAMA,EAAMC,UAAWA,EACpDC,SAAUA,GAAcR,IAAUS,K,iCC7B9C,oEAAO,IAAMC,EAAoB,SAACC,GAC9B,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,iJCCrCE,EAAcH,YAAiB,IAsB/BI,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EApBL,SAAC,GAAyC,IAAvCE,EAAsC,EAAtCA,aAAc1B,EAAwB,EAAxBA,MAAO2B,EAAiB,EAAjBA,WACtC,OACI,0BAAMC,SAAUF,GACXf,YAAY,QAAS,QAASD,IAAO,CAACO,IAAmBK,IACzDX,YAAY,WAAY,WAAYD,IAAO,CAACO,IAAmBK,GAAc,CAAEO,KAAM,aACrFlB,YAAY,KAAM,aAAcD,IAAO,KAAM,CAAEmB,KAAM,YAAc,eAEnEF,GAAc,yBAAKG,IAAKH,IACxBA,GAAchB,YAAY,qBAAsB,UAAWD,IAAO,CAACO,MAEpE,6BACI,0CAEHjB,GAAS,yBAAKG,UAAW4B,IAAEC,kBACvBhC,OAuBFiC,EAfD,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,iBAAkBC,EAAyB,EAAzBA,OAAQR,EAAiB,EAAjBA,WAKvC,OAAIQ,EACO,kBAAC,IAAD,CAAUC,GAAG,aAGjB,6BACH,qCACA,kBAACb,EAAD,CAAgBK,SAVH,SAACS,GACdH,EAAiBG,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,UAS9Cd,WAAYA,M,wBCpClDe,E,uKAEE,OAAO,kBAAC,EAAD,CAAOR,iBAAkBS,KAAKpC,MAAM2B,iBACvCP,WAAYgB,KAAKpC,MAAMoB,WACvBQ,OAAQQ,KAAKpC,MAAM4B,OACnBS,SAAUD,KAAKC,e,GALEC,IAAMC,WAepBC,sBACXC,aANkB,SAACC,GAAD,MAAY,CAC9BtB,WAAYsB,EAAMC,KAAKvB,WACvBQ,OAAQc,EAAMC,KAAKf,UAIM,CAAED,uBADhBa,CAEbL","file":"static/js/7.cfc3d5bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1chp0\",\"error\":\"FormsControls_error__1Srxy\",\"formSummaryError\":\"FormsControls_formSummaryError__2zsbT\"};","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({ meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n        <div>\r\n            {children}\r\n        </div>\r\n        <div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, ...restProps } = props;\r\n    return <FormControl {...props} ><textarea {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, component, validate, props = {}, text = '') => {\r\n    return <div>\r\n        <Field placeholder={placeholder} name={name} component={component}\r\n            validate={validate} {...props} />{text}\r\n    </div>\r\n};","export const requiredValidator = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLenghtCreator = (maxLenght) => (value) => {\r\n    if (value && value.length > maxLenght) return `Max lenght is ${maxLenght} symbols`;\r\n    return undefined;\r\n};","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Input, createField } from '../common/FormsControls/FormsControls';\r\nimport { requiredValidator, maxLenghtCreator } from '../../utils/validators/validators';\r\nimport s from '../common/FormsControls/FormsControls.module.css';\r\n\r\nconst maxLenght30 = maxLenghtCreator(30);\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Login', 'login', Input, [requiredValidator, maxLenght30])}\r\n            {createField('Password', 'password', Input, [requiredValidator, maxLenght30], { type: 'password' })}\r\n            {createField(null, 'rememberMe', Input, null, { type: 'checkbox' }, 'remember me')}\r\n\r\n            {captchaUrl && <img src={captchaUrl} />}\r\n            {captchaUrl && createField('Symbols from image', 'captcha', Input, [requiredValidator]) }\r\n\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n            {error && <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginFormRedux = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = ({ getAuthLoginData, isAuth, captchaUrl }) => {\r\n    const onSubmit = (formData) => {\r\n        getAuthLoginData(formData.login, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to='/profile' />\r\n    };\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginFormRedux onSubmit={onSubmit} captchaUrl={captchaUrl} />\r\n    </div>\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport Login from './Login';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { getAuthLoginData } from '../../redux/auth-reducer';\r\n\r\nclass LoginContainer extends React.Component {\r\n    render() {\r\n        return <Login getAuthLoginData={this.props.getAuthLoginData}\r\n            captchaUrl={this.props.captchaUrl}\r\n            isAuth={this.props.isAuth}\r\n            redirect={this.redirect} />\r\n    }\r\n};\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getAuthLoginData })\r\n)(LoginContainer);"],"sourceRoot":""}