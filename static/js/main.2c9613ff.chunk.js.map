{"version":3,"sources":["api/api.js","components/navbar/NavBar.module.css","serviceWorker.js","components/navbar/Friends/Friends.jsx","components/navbar/NavBar.jsx","components/navbar/NavBarContainer.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","components/header/Header.jsx","components/header/HeaderContainer.jsx","components/hoc/withSuspense.js","App.js","index.js","redux/auth-reducer.js","components/common/Preloader/Preloader.js","components/header/Header.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js","utils/object-helpers.js","redux/users-reducer.js","components/navbar/Friends/Friends.module.css","assets/images/5.svg"],"names":["instance","Axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","unFollow","userId","delete","follow","post","auth","me","loginIn","email","password","rememberMe","loginOut","profileAPI","getProfile","getStatus","updateStatus","status","put","module","exports","Boolean","window","location","hostname","match","Friends","props","className","s","friendsItem","src","name","NavBar","FriendsNameItems","friends","map","friendsName","nav_wraper","nav_s","h","to","activeClassName","active","friendsNavBar","compose","connect","state","sidebarItems","initialState","initialazed","appReducer","action","type","sidebarRecurser","reducers","combineReducers","profilePage","profileReducer","dialog","dialogsReducer","usersPage","usersReducer","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","Header","header","width","height","loginBlock","preloader","isAuth","onClick","deleteAuthLoginData","HeaderContainer","this","React","Component","login","withSuspence","Suspense","fallback","Preloader","ProfileContainer","lazy","DialogsContainer","UserContainer","LoginContainer","App","NavBarContainer","path","render","AppContainer","withRouter","initialazeApp","dispatch","promise","getAuthUserData","Promise","all","SamuraiJSApp","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","SET_USER_DATA","setAuthUserData","payload","a","resultCode","id","getAuthLoginData","messages","length","stopSubmit","_error","posts","nick","likecount","profile","addPost","newPostBody","setStatus","newPost","newPostText","filter","p","postId","dialogData","messageData","addMessage","newMessageBody","messageText","updateObjectInArray","items","itemId","objPropName","newObjectProps","u","users","totalUsersCount","isFething","followingInProgres","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFething","toggleFethingProgres","requestUsers","page","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","followed"],"mappings":"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","file":"static/js/main.2c9613ff.chunk.js","sourcesContent":["import Axios from \"axios\";\r\n\r\nconst instance = Axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"19ba1a2a-eda8-4d73-9a0f-f5e60f4f78e5\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    unFollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    }\r\n};\r\n\r\nexport const auth = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    loginIn(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe })\r\n    },\r\n    loginOut(){\r\n        return instance.delete(`auth/login`)\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status })\r\n    }\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_wraper\":\"NavBar_nav_wraper__17HmG\",\"active\":\"NavBar_active__373-i\",\"nav_s\":\"NavBar_nav_s__1H95N\",\"h\":\"NavBar_h__3D7AM\",\"friendsNavBar\":\"NavBar_friendsNavBar__WaOYc\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Friends.module.css'\r\n\r\nconst Friends = (props) => {\r\n\treturn(\r\n\t\t<div className={s.friendsItem}>\r\n\t\t\t<img src=\"https://img.devrant.com/devrant/rant/r_1973645_LFf2y.jpg\" />\r\n            <h5>{props.name}</h5>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Friends;","import React from 'react';\r\nimport s from './NavBar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Friends from './Friends/Friends';\r\n\r\nconst NavBar = (props) => {\r\n\t\r\n\tlet FriendsNameItems = props.friends\r\n\t\t.map( friendsName => <Friends name={friendsName.name} /> );\r\n\r\n\treturn(\r\n\t\t<div className={s.nav_wraper}>\r\n\t\t\t<nav className={s.nav_s}>\r\n\t\t\t\t<div className={s.h}>\r\n\t\t\t\t\t<NavLink to=\"/profile\" activeClassName={s.active}><li>Профіль</li></NavLink>\r\n\t\t\t\t\t<NavLink to=\"/dialogs\" activeClassName={s.active}><li>Діалогі</li></NavLink>\r\n\t\t\t\t\t<NavLink to=\"/users\" activeClassName={s.active}><li>Користувачі</li></NavLink>\r\n\t\t\t\t\t<NavLink to=\"/news\" activeClassName={s.active}><li>Новини</li></NavLink>\r\n\t\t\t\t\t<NavLink to=\"/music\" activeClassName={s.active}><li>Музика</li></NavLink>\r\n\t\t\t\t\t<NavLink to=\"/settings\" activeClassName={s.active}><li>Налаштування</li></NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.friendsNavBar}>\r\n\t\t\t\t\t{FriendsNameItems}\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NavBar;","import { connect } from \"react-redux\";\r\nimport NavBar from \"./NavBar\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n      friends:state.sidebarItems.friends\r\n    };\r\n  };\r\n\r\nexport default compose(connect(mapStateToProps))(NavBar);","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nlet INITIALAZED_SUCCESS = 'INITIALAZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialazed: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALAZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialazed: true\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nconst initialazedSuccess = () => ({ type: INITIALAZED_SUCCESS });\r\n\r\nexport const initialazeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initialazedSuccess());\r\n    });\r\n};\r\n\r\nexport default appReducer;","\r\nlet initialState = {\r\n    friends:[\r\n        {name:'Ostap'},\r\n        {name:'Bodya'},\r\n        {name:'Dima'}\r\n    ]\r\n};\r\n\r\nconst sidebarRecurser = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarRecurser;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarRecurser from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialog: dialogsReducer,\r\n    sidebarItems: sidebarRecurser,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\treturn (\r\n\t\t<div className={s.header}>\r\n\t\t\t<img src='https://logofirmowe.pl/a/wp-content/uploads/2018/05/disney-definicja-logotypu-e1527202599884.png'\r\n\t\t\t\twidth='100px' height='50px' />\r\n\t\t\t<div className={s.loginBlock}>\r\n\t\t\t\t<div className={s.preloader}>\r\n\t\t\t\t\t{props.isAuth\r\n\t\t\t\t\t\t\t? <NavLink to={'/profile'} onClick={props.deleteAuthLoginData}>exit</NavLink>\r\n\t\t\t\t\t\t\t: <NavLink to={'/login'}>Login</NavLink>}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { deleteAuthLoginData } from '../../redux/auth-reducer';\r\nimport { compose } from 'redux';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    };\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default compose(connect(mapStateToProps, { deleteAuthLoginData }))(HeaderContainer);","import React from 'react';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nexport const withSuspence = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n};\r\n\r\n","import React from 'react';\nimport './App.css';\nimport { Route, withRouter } from 'react-router-dom';\nimport NavBarContainer from './components/navbar/NavBarContainer';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { initialazeApp } from './redux/app-reducer';\nimport Preloader from './components/common/Preloader/Preloader';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/redux-store';\nimport { Provider } from 'react-redux';\nimport HeaderContainer from './components/header/HeaderContainer';\nimport { withSuspence } from './components/hoc/withSuspense';\n\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst UserContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst LoginContainer = React.lazy(() => import('./components/Login/LoginContainer'));\n\n\nclass App extends React.Component {\n\n  // componentDidMount() {\n  //   this.props.initialazeApp();\n  // };\n\n  render() {\n    if (!this.props.initialazed) {\n      return <Preloader />\n    };\n\n    return <div className='app_wraper'>\n      <HeaderContainer />\n      <NavBarContainer />\n      <div className='app_wraper_content'>\n        <Route path='/profile/:userId?' render={withSuspence(ProfileContainer)} />\n        <Route path='/dialogs' render={withSuspence(DialogsContainer)} />\n        <Route path='/users' render={withSuspence(UserContainer)} />\n        <Route path='/login' render={withSuspence(LoginContainer)} />\n      </div>\n    </div>\n  };\n};\n\nconst mapStateToProps = (state) => ({\n  initialazed: state.app.initialazed\n});\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initialazeApp })\n)(App);\n\nconst SamuraiJSApp = (props) => {\n  return <BrowserRouter>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </BrowserRouter>\n};\n\nexport default SamuraiJSApp;\n","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SamuraiJSApp from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <SamuraiJSApp />\n  </React.StrictMode>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { stopSubmit } from \"redux-form\";\r\nimport { auth } from \"../api/api\";\r\n\r\nlet SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nconst setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload: { userId, email, login, isAuth }\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await auth.me();\r\n    \r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    };\r\n};\r\n\r\nexport const getAuthLoginData = (email, password, rememberMe = false) => async (dispatch) => {\r\n    let response = await auth.loginIn(email, password, rememberMe);\r\n    \r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let messages = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('login', { _error: messages }));\r\n    }\r\n};\r\n\r\nexport const deleteAuthLoginData = () => async (dispatch) => {\r\n    let response = await auth.loginOut();\r\n    \r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    };\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport preloader from '../../../assets/images/5.svg';\r\n\r\nlet Preloader = (props) => {\r\n    return <img src={preloader} />\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3o-gD\",\"loginBlock\":\"Header_loginBlock__2RHdK\",\"preloader\":\"Header_preloader__1VV3-\"};","import { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, nick: 'Adam', post: 'Ok', likecount: 2 },\r\n        { id: 2, nick: 'Oscar', post: 'Enjou', likecount: 5 }\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost = {\r\n                nick: 'Mark',\r\n                post: action.newPostBody,\r\n                likecount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        case DELETE_POST:\r\n            return { ...state, posts: state.posts.filter(p => p.id != action.postId) }\r\n        case SET_USER_PROFILE:\r\n            return { ...state, profile: action.profile };\r\n        case SET_STATUS:\r\n            return { ...state, status: action.status };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nconst setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nexport const addPost = (newPostBody) => ({ type: ADD_POST, newPostBody });\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId });\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId);\r\n\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    };\r\n};\r\n\r\nexport default profileReducer;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogData:[\r\n        {name:'Marian', id:1},\r\n        {name:'Ostap', id:2},\r\n        {name:'Bodya', id:3}\r\n    ],\r\n    messageData:[\r\n        {message: 'Hi', id:1},\r\n        {message: 'fsd', id:2},\r\n        {message: 'ss', id:3}\r\n    ]\r\n};\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_MESSAGE:\r\n            const messageText= action.newMessageBody;\r\n            return{\r\n                ...state,\r\n                messageData:[...state.messageData, {message: messageText}]\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const addMessage = (newMessageBody) => ({ type: ADD_MESSAGE, newMessageBody });\r\n\r\nexport default dialogsReducer;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjectProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjectProps }\r\n        };\r\n        return u;\r\n    });\r\n};","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\nlet FOLLOW = 'FOLLOW';\r\nlet UNFOLLOW = 'UNFOLLOW';\r\nlet SET_USERS = 'SET_USERS';\r\nlet SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nlet SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\r\nlet TOGGLE_IS_FETHING = 'TOGGLE_IS_FETHING';\r\nlet TOGGLE_IS_FOLLOWIN_PROGRES = 'TOGGLE_IS_FOLLOWIN_PROGRES';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 10,\r\n    currentPage: 1,\r\n    isFething: false,\r\n    followingInProgres: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n            };\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users };\r\n        };\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage };\r\n        };\r\n        case SET_TOTAL_COUNT: {\r\n            return { ...state, totalUsersCount: action.totalCount };\r\n        };\r\n        case TOGGLE_IS_FETHING: {\r\n            return { ...state, isFething: action.isFething };\r\n        };\r\n        case TOGGLE_IS_FOLLOWIN_PROGRES: {\r\n            return {\r\n                ...state,\r\n                followingInProgres: action.isFething\r\n                    ? [...state.followingInProgres, action.userId]\r\n                    : state.followingInProgres.filter(id => id != action.userId)\r\n            }\r\n        };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalCount = (totalCount) => ({ type: SET_TOTAL_COUNT, totalCount });\r\nexport const toggleIsFething = (isFething) => ({ type: TOGGLE_IS_FETHING, isFething });\r\nexport const toggleFethingProgres = (isFething, userId) => ({ type: TOGGLE_IS_FOLLOWIN_PROGRES, isFething, userId });\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFething(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleIsFething(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalCount(data.totalCount));\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFethingProgres(true, userId));\r\n\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    };\r\n    dispatch(toggleFethingProgres(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(userId), followSuccess);\r\n};\r\n\r\nexport const unFollow = (userId) => async (dispatch) => {\r\n\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unFollow, unfollowSuccess);\r\n};\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsItem\":\"Friends_friendsItem__1opUz\"};","module.exports = __webpack_public_path__ + \"static/media/5.d5481c36.svg\";"],"sourceRoot":""}